services:
  citydata:
    build:
      context: ../CityData
      dockerfile: Dockerfile
    container_name: citydata
    ports:
      - "5002:80"
      - "8083:8080"
    environment:
      - DOTNET_ENVIRONMENT=Production
    networks:
      - mynw
  regionaldata:
    build:
      context: ../RegionalData
      dockerfile: Dockerfile
    container_name: regionaldata
    ports:
      - "5001:80"
      - "8082:8080"
    environment:
      - DOTNET_ENVIRONMENT=Production
    networks:
      - mynw
  regionalproducer:
    build:
      context: ../RegionalProducer/RegionalProducer
      dockerfile: Dockerfile
    container_name: regionalproducer
    ports:
      - "5000:80"
      - "8081:8080"
    depends_on:
      - regionalwriter
      - regionaldata
      - citydata
      - rabbitmq
    environment:
      - DOTNET_ENVIRONMENT=Production
    networks:
      - mynw
  regionalwriter:
    build:
      context: ../RegionalWriter
      dockerfile: Dockerfile
    container_name: regionalwriter
    ports:
      - "8080:8080"
    environment:
      - DOTNET_ENVIRONMENT=Production
    networks:
      - mynw
  rabbitmq:
    image: masstransit/rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=regional
      - RABBITMQ_DEFAULT_PASS=R3gional!234
      - RABBITMQ_PROMETHEUS=true
    command: rabbitmq-plugins enable rabbitmq_prometheus
    networks:
      - mynw
  # db:
  #   image: mcr.microsoft.com/mssql/server:2019-latest
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - SA_PASSWORD=tIy6obw6NF27
  #   ports:
  #     - 1433:1433

  # init-db:
  #   image: mcr.microsoft.com/mssql/server:2019-latest
  #   depends_on:
  #     - db
  #   environment:
  #     - DEBIAN_FRONTEND=noninteractive
  #     - ACCEPT_EULA=Y
  #   volumes:
  #     - ./scripts:/scripts
  #   user: root
  #   command: /bin/bash -c "apt-get update && apt-get install -y mssql-tools unixodbc-dev && /opt/mssql-tools/bin/sqlcmd -S db -U sa -P tIy6obw6NF27 -i /scripts/cria_banco.sql"
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - regionalproducer
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - mynw
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - mynw
networks:
  mynw:
